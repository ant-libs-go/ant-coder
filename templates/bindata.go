// Code generated by go-bindata.
// sources:
// templates/go_model/tablename.go
// templates/go_model/tablename_query.go
// templates/go_model/tablename_search.go
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesGo_modelTablenameGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\x51\x6f\xe2\x38\x17\x7d\xc6\xbf\xe2\x7e\x41\x1a\x25\x28\x75\xbe\x61\x56\xfb\xc0\x0a\xad\x18\x86\xce\xce\x88\x96\x6d\xcb\x68\x1f\xaa\x51\x26\x4d\x9c\x60\x6d\x62\x53\xdb\x51\x5b\x31\xfc\xf7\x95\x9d\x04\x42\x87\xb4\x49\x5b\x1e\xa0\x89\xaf\x8f\xef\x39\xe7\xda\xbe\xf5\x06\xd0\x7f\x93\x0f\xea\xc3\x24\x57\x2b\x2e\x46\x60\xfb\xfe\xe4\xdb\xf2\xaf\xc5\xa5\xef\x3b\xa8\x0f\x53\x41\x02\x45\x22\x58\xd2\x8c\x8c\xc0\xf7\xa7\x97\xb3\xc9\x72\xe6\x7f\x9a\x2c\x67\xcb\x2f\x67\x33\xdf\x47\x7d\x38\xa5\x29\x81\xf3\xa0\x08\x58\x4e\x3e\xce\x67\xfe\xf9\x44\x8f\xe1\x84\xa3\x3e\x7c\x22\x32\x14\x74\xad\x28\x67\x23\xf4\x36\xf9\xf6\x61\xe0\x21\xb4\x0e\xc2\x7f\x83\x84\x3c\x5a\x14\x21\x9a\xad\xb9\x50\x60\xa3\x9e\x25\x95\xa0\x2c\x91\x16\x42\x3d\xcb\xf7\xff\xbe\x5c\x7c\x9d\x4d\x97\x65\xa0\x97\xf1\x88\xa4\xc5\x58\x42\xd5\x2a\xbf\xc1\x21\xcf\xbc\x80\xa9\x93\x94\xde\xc8\x93\x84\x7b\xb9\xa2\xa9\x75\x38\x9c\xf0\x93\x7b\x2e\x32\xef\x26\xa7\x69\x44\x44\xc3\xa8\xfe\x2a\x87\xd2\xa0\x18\x8a\x09\x0d\x57\xd4\x8b\xc3\x20\xf2\xd5\x4a\xd0\x58\x79\x7a\x19\x2f\xe1\x1e\x61\x79\x26\x2d\xd4\xf3\x3c\xf5\xb0\x26\x12\x5a\x4e\x8b\xc3\x6c\xed\xaf\x03\x29\x35\x5d\xdf\x4c\xb5\x90\x83\x90\xfe\xeb\x50\x94\xe9\xe4\x6c\x36\xf7\x7d\x90\x4a\xe4\xa1\x82\x0d\xea\x55\xc3\x67\xb3\xe5\xc4\xbf\x5a\x5e\x7e\x9b\x2e\x7d\x1f\x6d\x11\x8a\x73\x16\x82\xad\x56\x54\xc2\xe0\x18\x86\x03\xcb\xe0\x26\x25\xda\x6e\xdb\x81\x42\x5f\x0d\x28\x88\xca\x05\x03\xeb\xd0\x0c\x4b\x43\x7a\x83\x16\xa8\xa7\x5c\x64\x81\xb2\x1d\xb0\x05\x0c\x0c\x17\x7c\x3c\x50\xaf\x05\x63\x78\xd7\x1c\xb3\xd9\xa2\x9e\x76\x0e\x4f\xa4\xa4\x09\x33\xcb\xba\x20\x9c\x2a\x49\xb4\x45\xba\x7c\x1a\x65\xba\xc8\x89\x78\x38\xa2\xd5\x81\x94\x3f\xb4\xc5\x23\xeb\xc4\xfa\x81\x7a\x92\x48\x49\x39\x83\x83\xcf\x40\x07\xe0\xab\x72\xa8\x1e\x4e\xe5\x39\xb9\xbb\x24\x21\x17\xd1\x3e\xfc\x86\xf3\x74\xff\x54\x0b\xaf\x3c\x39\x27\x77\xb6\x73\x5c\xbd\x22\xe1\x0d\xea\x71\x18\x8d\xe1\x5d\x63\x88\x16\x86\xe3\xfa\xf2\x63\x50\x22\x27\x3b\xf7\x78\x9b\x0a\x30\x50\x0e\x2c\x44\x56\xba\x65\x88\xce\x58\x42\x19\xf9\x2c\x78\xbe\x76\x6a\xf5\x50\xec\x31\xbc\x10\x59\x07\xe8\x52\xb4\x3a\x7c\xf9\xca\x40\xd3\x18\x34\x04\xae\x64\x1f\x8f\x81\xd1\x54\x8f\xf4\x0e\xdf\x17\x61\x26\x51\x7c\x4e\xee\x76\xb0\xd8\x94\xb0\xc9\xc3\x41\xbd\xed\x2e\xd9\xfa\xec\x0e\xe9\xce\x79\x10\xd9\x94\xad\x81\x32\x45\x44\x1c\x84\x64\xb3\x75\x81\xdc\x87\x69\x1e\x11\x09\x18\xe3\x62\x9b\x3c\xe7\x5e\xbd\x66\x29\x5b\xbb\x50\x14\x6e\x05\x84\x31\x76\x0e\x52\x35\x7b\xcb\x03\xe1\x02\x11\x42\x3b\x7f\xab\x91\xf0\xd5\xc5\xdc\xb6\x24\x49\x49\xa8\x60\x00\xb1\xe0\x19\x28\x22\x15\xdc\xad\x88\x20\x40\xb5\xe9\x7f\x5a\x2e\x0c\x1d\xfc\x99\x28\xdb\x69\x6d\xca\xc5\xdc\xbe\xad\x76\x06\x65\x89\x0b\xeb\x40\x04\x99\xe1\x57\x23\x5e\x78\xf6\x04\xce\x06\x15\x2e\xed\xdd\xb8\xba\x4d\x0b\xe4\x0a\xf2\x38\xd3\x01\x84\x9c\x45\xfa\xe4\x3f\x42\xfa\x1f\x4d\xce\x2e\x0f\x65\x3c\xbb\xdd\x58\x34\xb2\x46\xf0\x61\x5b\xb1\xec\x30\xc7\x05\x4b\xaa\x40\xe5\xd2\x1a\xc1\xff\xb7\x1d\x65\x2a\x40\x4d\xa6\x15\xf2\x94\xb3\xe8\x39\xef\x1f\x49\xb2\x47\x69\x65\xf9\x13\xec\x27\x2c\x3a\x18\x78\x39\x33\x8d\xf4\x5a\x5e\x15\xc6\x6b\x59\x2d\xc4\x1b\x91\x5a\x88\x57\x73\x2a\x21\x8e\x56\x6c\x46\x65\xd8\x50\xb1\x53\x9e\x4a\x5b\x33\x72\xc1\x62\x41\x46\x2c\xe7\xf9\x22\x6e\x49\xca\x40\x87\x3c\xed\x70\xf6\x3c\xe2\xb4\x43\x68\x7d\xe8\x98\xf3\x46\xf3\x71\xe1\x8d\xd9\x94\xd0\x52\x09\x78\x11\x97\xfd\xfc\x26\x26\x62\xd8\xa5\xf2\x22\x22\x3e\x3e\x68\xa6\x10\x11\x19\x6a\xfb\x14\x8d\x20\x90\xa1\xe5\xe0\x53\xca\xa2\x2e\xc5\x57\x60\x71\xfd\xfb\x72\xb3\x2a\x98\xb2\xd9\xc5\x5f\x39\x65\x25\xa6\x0b\x3a\x3f\xa7\x35\xf1\x1d\x3b\xdd\x1c\x59\xfb\x83\xb0\x2b\x33\xd3\x07\x7c\x7c\xb0\x13\xfd\xfb\xc6\xcc\x0a\xcc\x67\x98\xb5\xb5\x73\x4e\x33\xaa\xec\xf7\x2e\xbc\xef\x58\x95\xc5\xc4\x54\x7f\xeb\x7b\xdf\x05\x1e\xc7\x92\xa8\xf2\x36\xec\xc8\xb3\x06\x56\x01\x35\xdd\x81\xc5\x15\x3c\xf0\x5a\x3b\x41\xaa\xa6\xfa\x58\x50\x21\x14\x11\x82\x8b\x7d\x67\xdd\xd4\x53\xd3\x18\x56\x81\xdc\x69\xfb\x88\x83\x5e\x48\x38\x7f\xe8\x10\xdd\x91\xc5\x41\x2a\x09\xfc\xfc\x69\xa2\xff\xb7\xef\xd0\x4a\x46\x8c\xa6\x06\xc8\xb4\x5f\x06\xc9\x74\x51\x7a\x8b\x9a\xa7\xc3\x26\xd5\x80\xd5\xda\xf7\xb6\xe4\x8b\xa2\xd5\xec\xaf\xbf\x37\xf0\x17\x43\xc8\x82\xf5\x35\x65\xea\xc3\xb0\x29\xe6\x50\x23\xfd\xf4\x0b\x7b\xb3\xd2\x3b\x73\xc2\x0c\x61\xfc\x1c\xa4\x56\x33\xe6\x02\x7c\x17\x32\x2d\xa5\x08\x58\x42\x40\x14\x02\x0d\xaf\x33\xfc\x25\xfa\xae\x51\x6a\xcd\x69\x43\x69\x4f\x79\xce\x3a\xdd\x0c\x26\x5c\x2b\x42\x99\xfa\xfd\xb7\x5f\xfc\xaf\x35\xc2\xf5\xdb\x40\xcf\x6a\xa8\x0b\xa7\xdb\xa6\x1b\x6e\x1d\x3c\xbb\xa7\xb2\x43\xd2\x65\xb8\x4e\x5a\xff\x97\xd4\x2e\xe7\x62\xd2\x13\x39\xff\x17\x00\x00\xff\xff\x05\x67\x35\x5d\x3d\x11\x00\x00")

func templatesGo_modelTablenameGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesGo_modelTablenameGo,
		"templates/go_model/tablename.go",
	)
}

func templatesGo_modelTablenameGo() (*asset, error) {
	bytes, err := templatesGo_modelTablenameGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go_model/tablename.go", size: 4413, mode: os.FileMode(420), modTime: time.Unix(1551429096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGo_modelTablename_queryGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x5d\x6f\xdb\x36\x14\x7d\x36\x7f\xc5\x9d\x8c\x15\xa2\xe1\x49\x69\x36\x6c\x98\x01\x3f\xa8\x8e\xdb\x19\x48\x1d\x2c\x75\xb1\x87\xa0\x10\x14\xf1\xca\x26\x22\x93\x2e\x49\xc5\xcb\x0c\xfd\xf7\x81\x14\x95\xda\x89\xbd\xd9\x59\x96\x87\xc0\x24\xef\xc7\x39\xe7\x7e\x28\xee\x41\xf7\x55\xfe\x48\x17\x92\xca\x2c\xa4\x1a\x40\x98\xa6\xc9\xe7\xd9\x6f\x57\xd7\x69\x4a\x49\x17\x46\x0a\x33\x83\x0c\x66\x7c\x89\x03\x48\xd3\xd1\xf5\x38\x99\x8d\xd3\x8b\x64\x36\x9e\x4d\x3e\x8e\xd3\x94\x74\xe1\x3d\x2f\x11\xa6\x59\x63\x30\x4b\xde\x5d\x8e\xd3\x69\x62\xdf\xd2\xaf\x15\xaa\x87\x68\x2e\x49\x17\x2e\x50\xe7\x8a\xaf\x0c\x97\x62\x40\x5e\x07\x75\x17\x7a\x31\x21\xab\x2c\xbf\xcb\xe6\xf8\x24\x35\x21\x7c\xb9\x92\xca\x40\x48\x3a\x01\x2a\x25\x95\x0e\x48\x27\x28\x96\x26\x20\xa4\x13\xcc\xb9\x59\x54\xb7\x51\x2e\x97\xf1\x5c\xfe\xf0\xa7\x54\xcb\xf8\xb6\xe2\x25\x43\x15\xec\x7f\xb5\xff\xfc\x53\x99\x35\x4f\x05\xf2\x7c\xc1\xe3\x22\xcf\x58\x6a\x16\x8a\x17\x26\x2e\xf9\xad\x8e\xe7\x32\x46\x51\x2d\x75\x40\x28\x21\x71\x0c\xaa\x0f\xea\xbc\x0f\xa8\x14\x0c\x86\xd0\x48\x92\xe4\x86\xdf\x63\x48\xa3\xf7\x5c\xb0\x90\x92\xa2\x12\x39\x84\x66\xc1\x35\xf4\x76\x88\x8c\x92\x8f\xe3\xcb\x34\xfd\xdd\x7a\x51\x68\xdd\xfe\xc1\x08\x36\xa4\xa3\xd0\x54\x4a\x80\x0d\x17\x25\x82\x85\x9e\x5a\x34\xfe\xba\x09\xb4\xc9\x4c\xa5\x83\x01\x9c\xd5\x94\xd4\x84\xc4\xbd\x06\x92\xd5\xb2\x01\xbb\x03\xf4\x03\x9a\x77\x0f\x13\x16\x9e\x1f\x8d\xb1\xf5\xe0\x0c\xb8\x30\x3f\x9e\x53\x08\xd5\x7e\x87\x26\x95\x2b\x0e\xb5\xb0\x79\x01\x9c\xc1\x70\x08\x67\xf6\xe4\x59\x90\x4e\xbd\x4b\xe8\x8f\x05\x2a\xdc\xa1\xc4\x59\x30\x00\xce\x6a\x6a\xd1\x86\x0d\xab\xfd\xb2\x7b\x6c\x3a\xbc\xf9\xe2\xb0\x6d\xde\xf6\xe1\xbc\x3e\x95\x9a\x0e\x39\xd3\xe0\x43\x38\x7a\x37\x5f\x0e\x10\x54\xe7\xb0\xcc\x56\x37\xce\xf2\x90\xcd\x33\x11\x4a\x14\x36\x03\x7d\xb9\x14\xba\x7e\xec\xac\xa6\xc4\xb9\x1b\x63\x5f\xe3\x85\x31\x2b\x3d\x88\xe3\xf5\x7a\x1d\xdd\x65\x22\x2f\x65\xc5\xa2\x5c\xb8\x1e\x5f\x95\x95\x76\x3f\xe2\xb7\x3f\xff\x72\xf6\xeb\x4f\xd6\xfe\xcd\x3e\xdc\x9b\xfa\x58\xd5\x26\x42\xa3\x32\x21\x17\x2b\xdb\x10\xa8\x8a\x2c\xc7\x4d\xdd\x07\x8d\x5a\x73\x29\xa0\x67\xd3\x45\x9f\x9a\x13\x85\x70\x57\x0f\x47\xf4\x52\x66\xcc\x06\xa0\xfe\xfc\xc9\x35\x31\x0c\xc1\x0d\x5a\x34\x11\x85\x6c\xae\xd2\xa9\x54\xcb\xac\x24\x4e\xc7\x36\xc1\x77\x43\x10\xbc\x74\x42\x3a\xef\xf6\x7e\xd8\x5a\x38\x61\x7d\x25\x86\x8d\xb4\x1e\x4e\x48\x23\x0f\xff\x8d\xbb\xde\x47\x93\xb6\x45\xf1\x8d\x77\xa0\x19\x4e\x15\x2c\x29\x4b\xa7\xd9\xc1\xde\x3a\x4e\xbf\x42\x2a\x48\xfb\x70\x6f\x87\x40\x65\x62\x8e\x60\x83\x5a\x2d\xee\xff\x5d\xc6\x4e\xfd\x7f\x28\xd9\x14\x72\x4b\xb3\x1e\x54\x2b\xe6\xfb\xf3\x48\x8d\x3e\x3b\x87\x97\x36\x15\x2f\x1a\x6c\x93\x67\xeb\xa6\x31\xd2\xd1\x14\xd7\x61\xc0\x19\x08\x69\x40\xa3\x09\xa8\x63\xd6\xfa\x71\x3d\xc5\xf5\x35\xe6\x52\xb9\x00\x46\x55\xe8\x62\xec\x7e\x83\x1e\x97\x8f\xf3\x69\xf7\xa2\x4f\x4c\x49\xc7\x86\xb3\x16\x5b\xaa\xb6\x28\x8a\xa5\x89\xc6\x16\x49\x61\x51\x74\xbf\x6f\x80\x14\xb2\x12\x2c\xe8\xc3\x56\x88\xba\x2d\x85\x1b\x91\xdd\xfc\x0d\xe6\x27\x03\xf4\x9f\xeb\x79\x60\xe9\x78\x4c\x35\xdd\x2a\xb8\x2f\xd2\xb1\xa3\xd3\x03\x86\x25\x9e\xd4\x06\x17\xce\x21\x3c\xba\xea\xa7\x11\xdf\xde\xb5\x23\x59\xea\xb0\xfd\x7a\x7e\xa3\xa6\x8d\xaa\x72\xe3\x02\xf9\x69\x7a\x3a\x4b\xa4\x53\x7f\x7b\x1d\x3c\x1f\xb5\x86\x02\xeb\x93\x4e\xdd\xb7\xa0\xe8\xee\x48\x64\x65\xe9\xd6\xf6\xa3\x38\xfe\xc2\xde\x70\x37\x50\x20\xd5\xd6\xfc\xc4\xb1\x6d\x15\x9e\xe3\x00\x2a\xa1\xb3\x02\xfb\x50\x09\x85\x59\xc9\xff\x42\x76\xda\x06\xba\x52\x87\xa6\xec\x0e\x1f\x34\xb4\x2d\x30\x92\x82\x1d\x3b\x78\x3b\xd5\x9e\xa3\xc3\xee\x59\xbc\x16\xf6\x0f\x68\xae\x94\x5f\x35\xb9\x14\xec\x09\xce\x17\x6e\x8c\x47\xe0\x7f\x07\x00\x00\xff\xff\x40\x13\xf4\xf6\x74\x0b\x00\x00")

func templatesGo_modelTablename_queryGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesGo_modelTablename_queryGo,
		"templates/go_model/tablename_query.go",
	)
}

func templatesGo_modelTablename_queryGo() (*asset, error) {
	bytes, err := templatesGo_modelTablename_queryGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go_model/tablename_query.go", size: 2932, mode: os.FileMode(420), modTime: time.Unix(1551429324, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGo_modelTablename_searchGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x94\x5f\x4f\xe3\x3a\x10\xc5\x9f\xe3\x4f\x31\x4a\xa5\xab\xa4\x6a\x1d\xe0\xbe\x55\xea\x95\x42\x09\xba\x95\x0a\xec\x42\xf7\x09\x21\x63\x62\x37\x1d\x91\xc4\xc1\x76\x76\x81\xaa\xdf\x7d\xe5\x26\xdb\x7f\x2a\x5b\xed\x8a\x48\x7d\x88\xe7\xcc\xef\x1c\x4f\x5c\x47\x5d\xe8\x7c\xca\x43\x3a\x10\xd7\x76\xae\xf4\x00\x02\xc6\xe2\x6f\xd3\xff\x6f\x6e\x19\x0b\x49\x07\x46\x5a\x72\x2b\x05\x4c\xb1\x90\x03\x60\x6c\x74\x9b\xc4\xd3\x84\x5d\xc4\xd3\x64\x3a\xbe\x4a\x18\x23\x1d\xb8\xc4\x5c\xc2\x35\x6f\x04\xd3\xf8\x7c\x92\xb0\xeb\xd8\xd5\x98\x91\x5c\xa7\x73\x9a\x29\xd2\x81\x0b\x69\x52\x8d\x95\x45\x55\x0e\xc8\xe7\xc4\xee\x40\x37\x22\xa4\xe2\xe9\x33\xcf\xe4\x9e\x37\x21\x58\x54\x4a\x5b\x08\x88\xe7\x67\x68\xe7\xf5\x13\x4d\x55\x11\xf1\xd2\xf6\x73\x7c\x32\xfd\x4c\x45\xb5\xc5\xdc\xdf\x2d\x67\xaa\xff\xaa\x74\x11\x3d\xd5\x98\x0b\xa9\x7d\x12\x12\x62\xdf\x2a\x09\x5f\x78\x26\x35\x18\xab\xeb\xd4\xc2\x82\x78\xee\x1d\xdc\x83\xa5\x85\xc7\x99\xd2\xc5\xc0\xaf\x78\x26\xfd\x47\xe2\x4d\xb8\xb1\x63\xb1\x5b\xcb\xb9\xb1\x0c\x85\x2b\xbb\xd6\x3b\x7c\x97\xfb\xad\xcc\xe0\xbb\xeb\x5f\xb6\x96\x3b\x1b\x1a\xc5\x57\xc9\x84\xb1\xbb\xd5\x44\xb7\x72\x1c\x12\x35\x16\x9a\x78\x2f\xb5\xd4\x6f\xd0\x3d\xa4\xf9\xea\x4a\xce\x6a\x56\x97\x29\x5c\xcb\x1f\x0d\x39\x08\x0f\xcb\x5b\xdf\x05\xf1\x14\x0c\x86\xf0\xcf\xc7\x9a\xc5\x92\x78\x8a\x36\xce\x43\x07\x0e\x42\xb7\xb0\xde\xf4\x10\x4e\x4f\x4e\x88\xa7\xa5\xad\x75\x09\x6a\x1d\x21\xb0\x73\x34\xbf\x33\x0f\x61\xa2\xb8\x08\xb0\xac\xdc\xe0\xa4\x9e\xf1\x54\x2e\x96\x3d\x90\xaf\x69\x5e\x0b\x69\x80\x52\x6a\xac\xc6\x32\x3b\xba\x07\xf7\xe1\x69\x6c\x0c\x66\xa5\xe3\xf5\xc0\x79\x6f\x48\x94\xd2\x70\x9d\xd0\x95\xfe\x24\xe4\x25\xe6\x56\xea\xb1\x30\x01\x0a\x03\xf7\x0f\x58\xda\x7f\xcf\x8e\x26\x72\xdc\x66\x68\x34\x2e\x45\xd0\x1e\x3f\x9a\xbc\x2c\x7c\x14\xfe\x00\x50\x98\xe5\xdf\x67\x5a\x7f\xdb\x40\xc3\xfd\xc3\x41\x69\x0f\xf4\x19\x14\xbc\xba\x5f\xe5\xfd\x48\x23\xb5\x76\x3f\xa5\xc3\xfd\xd0\xa9\xc5\xef\x32\x08\xe9\x8d\x16\x52\x9f\xbf\x05\x3e\x0a\xb8\x48\xee\x46\x7e\x48\x27\x58\xa0\x5d\xa5\x5c\x9f\x82\x90\x10\x0f\x67\xab\x7d\xd0\xb1\x80\xff\xe0\xc4\xf1\x8e\x4e\xa1\xd5\xbb\x49\x2c\x37\x80\xf6\xef\x76\x04\x32\xb1\xdb\x90\xa6\xa7\x05\x45\x5d\xe2\x39\x5a\x2e\xcb\x26\xa6\xbb\xcc\xc2\x35\xf0\x43\x22\x3e\xcb\x85\x5f\xf2\x42\xfa\xcd\x09\x5a\xf5\x39\xa6\x83\x76\xa3\x4d\xc2\xd5\x65\xf1\x0b\xb7\xb3\x38\x1c\xee\x98\x34\x6b\x70\xda\x20\xb6\x8d\x0f\x0c\xb1\x07\x9b\xf7\xfe\x69\xd8\xdd\x9b\xb0\x23\x6c\x9d\x97\x96\x73\x89\xa5\x08\x42\xb2\x24\x3f\x03\x00\x00\xff\xff\xbd\xcb\x9a\x7e\x3d\x06\x00\x00")

func templatesGo_modelTablename_searchGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesGo_modelTablename_searchGo,
		"templates/go_model/tablename_search.go",
	)
}

func templatesGo_modelTablename_searchGo() (*asset, error) {
	bytes, err := templatesGo_modelTablename_searchGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go_model/tablename_search.go", size: 1597, mode: os.FileMode(420), modTime: time.Unix(1551436403, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/go_model/tablename.go": templatesGo_modelTablenameGo,
	"templates/go_model/tablename_query.go": templatesGo_modelTablename_queryGo,
	"templates/go_model/tablename_search.go": templatesGo_modelTablename_searchGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"go_model": &bintree{nil, map[string]*bintree{
			"tablename.go": &bintree{templatesGo_modelTablenameGo, map[string]*bintree{}},
			"tablename_query.go": &bintree{templatesGo_modelTablename_queryGo, map[string]*bintree{}},
			"tablename_search.go": &bintree{templatesGo_modelTablename_searchGo, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

