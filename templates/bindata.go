// Code generated by go-bindata.
// sources:
// templates/go_model/tablename.go
// templates/go_model/tablename_query.go
// templates/go_model/tablename_search.go
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesGo_modelTablenameGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\x51\x6f\xe2\x38\x17\x7d\xc6\xbf\xe2\x7e\x41\x1a\x25\x28\x75\xbe\x61\x56\xfb\xc0\x0a\xad\x18\x86\xce\xce\x88\x96\x6d\xcb\x68\x1f\xaa\x51\x26\x4d\x9c\x60\x6d\x62\x53\xdb\x51\x5b\x31\xfc\xf7\x95\x9d\x04\x42\x87\xb4\x49\x5b\x1e\xa0\x89\xaf\x8f\xef\x39\xe7\xda\xbe\xf5\x06\xd0\x7f\x93\x0f\xea\xc3\x24\x57\x2b\x2e\x46\x60\xfb\xfe\xe4\xdb\xf2\xaf\xc5\xa5\xef\x3b\xa8\x0f\x53\x41\x02\x45\x22\x58\xd2\x8c\x8c\xc0\xf7\xa7\x97\xb3\xc9\x72\xe6\x7f\x9a\x2c\x67\xcb\x2f\x67\x33\xdf\x47\x7d\x38\xa5\x29\x81\xf3\xa0\x08\x58\x4e\x3e\xce\x67\xfe\xf9\x44\x8f\xe1\x84\xa3\x3e\x7c\x22\x32\x14\x74\xad\x28\x67\x23\xf4\x36\xf9\xf6\x61\xe0\x21\xb4\x0e\xc2\x7f\x83\x84\x3c\x5a\x14\x21\x9a\xad\xb9\x50\x60\xa3\x9e\x25\x95\xa0\x2c\x91\x16\x42\x3d\xcb\xf7\xff\xbe\x5c\x7c\x9d\x4d\x97\x65\xa0\x97\xf1\x88\xa4\xc5\x58\x42\xd5\x2a\xbf\xc1\x21\xcf\xbc\x80\xa9\x93\x94\xde\xc8\x93\x84\x7b\xb9\xa2\xa9\x75\x38\x9c\xf0\x93\x7b\x2e\x32\xef\x26\xa7\x69\x44\x44\xc3\xa8\xfe\x2a\x87\xd2\xa0\x18\x8a\x09\x0d\x57\xd4\x8b\xc3\x20\xf2\xd5\x4a\xd0\x58\x79\x7a\x19\x2f\xe1\x1e\x61\x79\x26\x2d\xd4\xf3\x3c\xf5\xb0\x26\x12\x5a\x4e\x8b\xc3\x6c\xed\xaf\x03\x29\x35\x5d\xdf\x4c\xb5\x90\x83\x90\xfe\xeb\x50\x94\xe9\xe4\x6c\x36\xf7\x7d\x90\x4a\xe4\xa1\x82\x0d\xea\x55\xc3\x67\xb3\xe5\xc4\xbf\x5a\x5e\x7e\x9b\x2e\x7d\x1f\x6d\x11\x8a\x73\x16\x82\xad\x56\x54\xc2\xe0\x18\x86\x03\xcb\xe0\x26\x25\xda\x6e\xdb\x81\x42\x5f\x0d\x28\x88\xca\x05\x03\xeb\xd0\x0c\x4b\x43\x7a\x83\x16\xa8\xa7\x5c\x64\x81\xb2\x1d\xb0\x05\x0c\x0c\x17\x7c\x3c\x50\xaf\x05\x63\x78\xd7\x1c\xb3\xd9\xa2\x9e\x76\x0e\x4f\xa4\xa4\x09\x33\xcb\xba\x20\x9c\x2a\x49\xb4\x45\xba\x7c\x1a\x65\xba\xc8\x89\x78\x38\xa2\xd5\x81\x94\x3f\xb4\xc5\x23\xeb\xc4\xfa\x81\x7a\x92\x48\x49\x39\x83\x83\xcf\x40\x07\xe0\xab\x72\xa8\x1e\x4e\xe5\x39\xb9\xbb\x24\x21\x17\xd1\x3e\xfc\x86\xf3\x74\xff\x54\x0b\xaf\x3c\x39\x27\x77\xb6\x73\x5c\xbd\x22\xe1\x0d\xea\x71\x18\x8d\xe1\x5d\x63\x88\x16\x86\xe3\xfa\xf2\x63\x50\x22\x27\x3b\xf7\x78\x9b\x0a\x30\x50\x0e\x2c\x44\x56\xba\x65\x88\xce\x58\x42\x19\xf9\x2c\x78\xbe\x76\x6a\xf5\x50\xec\x31\xbc\x10\x59\x07\xe8\x52\xb4\x3a\x7c\xf9\xca\x40\xd3\x18\x34\x04\xae\x64\x1f\x8f\x81\xd1\x54\x8f\xf4\x0e\xdf\x17\x61\x26\x51\x7c\x4e\xee\x76\xb0\xd8\x94\xb0\xc9\xc3\x41\xbd\xed\x2e\xd9\xfa\xec\x0e\xe9\xce\x79\x10\xd9\x94\xad\x81\x32\x45\x44\x1c\x84\x64\xb3\x75\x81\xdc\x87\x69\x1e\x11\x09\x18\xe3\x62\x9b\x3c\xe7\x5e\xbd\x66\x29\x5b\xbb\x50\x14\x6e\x05\x84\x31\x76\x0e\x52\x35\x7b\xcb\x03\xe1\x02\x11\x42\x3b\x7f\xab\x91\xf0\xd5\xc5\xdc\xb6\x24\x49\x49\xa8\x60\x00\xb1\xe0\x19\x28\x22\x15\xdc\xad\x88\x20\x40\xb5\xe9\x7f\x5a\x2e\x0c\x1d\xfc\x99\x28\xdb\x69\x6d\xca\xc5\xdc\xbe\xad\x76\x06\x65\x89\x0b\xeb\x40\x04\x99\xe1\x57\x23\x5e\x78\xf6\x04\xce\x06\x15\x2e\xed\xdd\xb8\xba\x4d\x0b\xe4\x0a\xf2\x38\xd3\x01\x84\x9c\x45\xfa\xe4\x3f\x42\xfa\x1f\x4d\xce\x2e\x0f\x65\x3c\xbb\xdd\x58\x34\xb2\x46\xf0\x61\x5b\xb1\xec\x30\xc7\x05\x4b\xaa\x40\xe5\xd2\x1a\xc1\xff\xb7\x1d\x65\x2a\x40\x4d\xa6\x15\xf2\x94\xb3\xe8\x39\xef\x1f\x49\xb2\x47\x69\x65\xf9\x13\xec\x27\x2c\x3a\x18\x78\x39\x33\x8d\xf4\x5a\x5e\x15\xc6\x6b\x59\x2d\xc4\x1b\x91\x5a\x88\x57\x73\x2a\x21\x8e\x56\x6c\x46\x65\xd8\x50\xb1\x53\x9e\x4a\x5b\x33\x72\xc1\x62\x41\x46\x2c\xe7\xf9\x22\x6e\x49\xca\x40\x87\x3c\xed\x70\xf6\x3c\xe2\xb4\x43\x68\x7d\xe8\x98\xf3\x46\xf3\x71\xe1\x8d\xd9\x94\xd0\x52\x09\x78\x11\x97\xfd\xfc\x26\x26\x62\xd8\xa5\xf2\x22\x22\x3e\x3e\x68\xa6\x10\x11\x19\x6a\xfb\x14\x8d\x20\x90\xa1\xe5\xe0\x53\xca\xa2\x2e\xc5\x57\x60\x71\xfd\xfb\x72\xb3\x2a\x98\xb2\xd9\xc5\x5f\x39\x65\x25\xa6\x0b\x3a\x3f\xa7\x35\xf1\x1d\x3b\xdd\x1c\x59\xfb\x83\xb0\x2b\x33\xd3\x07\x7c\x7c\xb0\x13\xfd\xfb\xc6\xcc\x0a\xcc\x67\x98\xb5\xb5\x73\x4e\x33\xaa\xec\xf7\x2e\xbc\xef\x58\x95\xc5\xc4\x54\x7f\xeb\x7b\xdf\x05\x1e\xc7\x92\xa8\xf2\x36\xec\xc8\xb3\x06\x56\x01\x35\xdd\x81\xc5\x15\x3c\xf0\x5a\x3b\x41\xaa\xa6\xfa\x58\x50\x21\x14\x11\x82\x8b\x7d\x67\xdd\xd4\x53\xd3\x18\x56\x81\xdc\x69\xfb\x88\x83\x5e\x48\x38\x7f\xe8\x10\xdd\x91\xc5\x41\x2a\x09\xfc\xfc\x69\xa2\xff\xb7\xef\xd0\x4a\x46\x8c\xa6\x06\xc8\xb4\x5f\x06\xc9\x74\x51\x7a\x8b\x9a\xa7\xc3\x26\xd5\x80\xd5\xda\xf7\xb6\xe4\x8b\xa2\xd5\xec\xaf\xbf\x37\xf0\x17\x43\xc8\x82\xf5\x35\x65\xea\xc3\xb0\x29\xe6\x50\x23\xfd\xf4\x0b\x7b\xb3\xd2\x3b\x73\xc2\x0c\x61\xfc\x1c\xa4\x56\x33\xe6\x02\x7c\x17\x32\x2d\xa5\x08\x58\x42\x40\x14\x02\x0d\xaf\x33\xfc\x25\xfa\xae\x51\x6a\xcd\x69\x43\x69\x4f\x79\xce\x3a\xdd\x0c\x26\x5c\x2b\x42\x99\xfa\xfd\xb7\x5f\xfc\xaf\x35\xc2\xf5\xdb\x40\xcf\x6a\xa8\x0b\xa7\xdb\xa6\x1b\x6e\x1d\x3c\xbb\xa7\xb2\x43\xd2\x65\xb8\x4e\x5a\xff\x97\xd4\x2e\xe7\x62\xd2\x13\x39\xff\x17\x00\x00\xff\xff\x05\x67\x35\x5d\x3d\x11\x00\x00")

func templatesGo_modelTablenameGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesGo_modelTablenameGo,
		"templates/go_model/tablename.go",
	)
}

func templatesGo_modelTablenameGo() (*asset, error) {
	bytes, err := templatesGo_modelTablenameGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go_model/tablename.go", size: 4413, mode: os.FileMode(420), modTime: time.Unix(1551169761, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGo_modelTablename_queryGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x5d\x6f\xdb\x36\x14\x7d\x36\x7f\xc5\x9d\x8c\x15\x92\xe1\x49\x69\x36\x6c\x98\x01\x3f\xa8\x8e\xdb\x19\x48\x1d\x2c\x75\xb1\x87\xa0\x10\x14\xf1\xca\x26\x22\x91\x2e\x49\xc5\xcb\x0c\xfd\xf7\x81\x14\x95\x5a\x89\xbd\xd9\x59\x96\x87\xc0\x22\xef\xc7\x39\xe7\x7e\x30\x1a\x40\xff\x55\xfe\x48\x1f\xe2\x4a\xaf\x84\x1c\x81\x9f\x24\xf1\xe7\xc5\x6f\x57\xd7\x49\x12\x90\x3e\x4c\x24\xa6\x1a\x29\x2c\x58\x89\x23\x48\x92\xc9\xf5\x34\x5e\x4c\x93\x8b\x78\x31\x5d\xcc\x3e\x4e\x93\x84\xf4\xe1\x3d\x2b\x10\xe6\x69\x63\xb0\x88\xdf\x5d\x4e\x93\x79\x6c\xee\x92\xaf\x15\xca\x87\x70\x29\x48\x1f\x2e\x50\x65\x92\xad\x35\x13\x7c\x44\x5e\x07\x75\x1f\x06\x11\x21\xeb\x34\xbb\x4b\x97\xf8\x24\x35\x21\xac\x5c\x0b\xa9\xc1\x27\x3d\x0f\xa5\x14\x52\x79\xa4\xe7\xe5\xa5\xf6\x08\xe9\x79\x4b\xa6\x57\xd5\x6d\x98\x89\x32\x5a\x8a\x1f\xfe\x14\xb2\x8c\x6e\x2b\x56\x50\x94\xde\xfe\x5b\xf3\xcf\x5d\x15\x69\x73\x95\x23\xcb\x56\x2c\xca\xb3\x94\x26\x7a\x25\x59\xae\xa3\x82\xdd\xaa\x68\x29\x22\xe4\x55\xa9\x3c\x12\x10\x12\x45\x20\x87\x20\xcf\x87\x80\x52\xc2\x68\x0c\x8d\x24\x71\xa6\xd9\x3d\xfa\x41\xf8\x9e\x71\xea\x07\x24\xaf\x78\x06\xbe\x5e\x31\x05\x83\x0e\x91\x49\xfc\x71\x7a\x99\x24\xbf\x1b\xaf\x00\x5a\xb7\x7f\x30\x82\x2d\xe9\x49\xd4\x95\xe4\x60\xc2\x85\x31\xa7\xbe\xa3\x16\x4e\xbf\x6e\x3d\xa5\x53\x5d\x29\x6f\x04\x67\x75\x40\x6a\x42\xa2\x41\x03\xc9\x68\xd9\x80\xed\x00\xfd\x80\xfa\xdd\xc3\x8c\xfa\xe7\x47\x63\x6c\x3d\x18\x05\xc6\xf5\x8f\xe7\x01\xf8\x72\xbf\x43\x93\xca\x16\x27\x30\xb0\x59\x0e\x8c\xc2\x78\x0c\x67\xe6\xcb\xb1\x20\xbd\xba\x4b\xe8\x8f\x15\x4a\xec\x50\x62\xd4\x1b\x01\xa3\x75\x60\xd0\xfa\x0d\xab\xfd\xb2\x3b\x6c\xca\xbf\xf9\x62\xb1\x6d\xdf\x0e\xe1\xbc\x3e\x95\x9a\xf2\x19\x55\xe0\x42\x58\x7a\x37\x5f\x0e\x10\x94\xe7\x50\xa6\xeb\x1b\x6b\x79\xc8\xe6\x99\x08\x05\x72\x93\x21\x78\xb9\x14\xaa\x7e\xec\xac\xa6\xc4\x99\x1d\x63\x57\xe3\x95\xd6\x6b\x35\x8a\xa2\xcd\x66\x13\xde\xa5\x3c\x2b\x44\x45\xc3\x8c\xdb\x1e\x5f\x17\x95\xb2\x3f\xa2\xb7\x3f\xff\x72\xf6\xeb\x4f\xc6\xfe\xcd\x3e\xdc\xdb\xfa\x58\xd5\x66\x5c\xa1\xd4\x3e\xe3\x6b\xd3\x10\x28\xf3\x34\xc3\x6d\x3d\x04\x85\x4a\x31\xc1\x61\x60\xd2\x85\x9f\x9a\xaf\x00\xfc\xae\x1e\x96\xe8\xa5\x48\xa9\x09\x10\xb8\xef\x4f\xb6\x89\x61\x0c\x76\xd0\xc2\x19\xcf\x45\x73\x94\xcc\x85\x2c\xd3\x82\x58\x1d\xdb\x04\xdf\x8d\x81\xb3\xc2\x0a\x69\xbd\xdb\xf3\x71\x6b\x61\x85\x75\x95\x18\x37\xd2\x3a\x38\x7e\x10\x3a\xf8\x6f\xec\xf1\x3e\x9a\x41\x5b\x14\xd7\x78\x07\x9a\xe1\x54\xc1\xe2\xa2\x78\xa9\x66\xb9\x90\x90\x0c\xe1\xde\x34\xbe\x4c\xf9\x12\xc1\x04\x32\xfc\xef\xff\x5d\xba\x5e\xfd\x7f\xa8\xd7\x14\x6f\x47\xa7\x01\x54\x6b\xea\x7a\xf2\x48\x5d\x3e\x5b\x87\x97\x8a\xc2\xf2\x06\xdb\xec\xd9\x8a\x69\x8c\x54\x38\xc7\x8d\xef\x31\x0a\x5c\x68\x50\xa8\xbd\xc0\x32\x6b\xfd\x98\x9a\xe3\xe6\x1a\x33\x21\x6d\x00\x2d\x2b\xb4\x31\xba\xef\x4e\x47\x86\x76\x15\xba\xbc\x01\xe9\x99\x68\xc6\x60\x47\xd4\x16\x44\x5e\xea\x70\x6a\x80\xe4\x06\x44\xff\xfb\x06\x47\x2e\x2a\x4e\xbd\x21\xec\x84\xa8\xdb\x4a\xd8\xa9\xe8\xa6\x6f\x20\x3f\x99\x99\xff\x5c\xce\x03\x7b\xc6\x61\xaa\x83\x9d\x7a\xbb\x1a\x1d\x3b\x2d\x03\xa0\x58\xe0\x49\x5d\x70\x61\x1d\xfc\xa3\x8b\x7e\x1a\xf1\xdd\xf5\x3a\x11\x85\xf2\xdb\x07\xf3\x1b\x35\xa5\x65\x95\x69\x1b\xc8\x0d\xd3\xd3\x51\x22\xbd\xfa\xdb\xed\xe8\xf9\xa4\x35\x14\xe8\x90\xf4\x1e\xdf\x60\x37\x0c\x69\x51\xd8\x25\xfd\xa8\x8b\x3b\x30\x27\xcc\x8e\x12\x08\xb9\x33\x39\x51\x64\xba\x84\x65\x38\x82\x8a\xab\x34\xc7\x21\x54\x5c\x62\x5a\xb0\xbf\x90\x9e\xb6\x6f\xae\xe4\xa1\xf9\xba\xc3\x07\x05\x6d\xf5\x27\x82\xd3\x63\x47\xae\x53\xe8\x25\x5a\xec\x8e\xc5\x6b\x61\xff\x80\xfa\x4a\xba\x25\x93\x09\x4e\x9f\xe0\x7c\xe1\xae\x78\x04\xfe\x77\x00\x00\x00\xff\xff\x1e\xec\xb9\x76\x62\x0b\x00\x00")

func templatesGo_modelTablename_queryGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesGo_modelTablename_queryGo,
		"templates/go_model/tablename_query.go",
	)
}

func templatesGo_modelTablename_queryGo() (*asset, error) {
	bytes, err := templatesGo_modelTablename_queryGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go_model/tablename_query.go", size: 2914, mode: os.FileMode(420), modTime: time.Unix(1551158632, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGo_modelTablename_searchGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x94\x5f\x4f\xdb\x30\x14\xc5\x9f\xe3\x4f\x71\x95\x4a\x53\x5c\xb5\x2e\xb0\xb7\x4a\x9d\x14\x4a\xd0\x2a\x95\x32\x41\xf7\x84\x90\x31\xb1\x9b\x5e\x91\xc4\xc5\x76\xc6\x9f\xaa\xdf\x7d\x72\x53\xda\xd2\x15\x10\x13\x91\xf2\x90\xf8\xdc\xdf\x39\xbe\x37\x71\xa7\x09\x8d\x2f\xb9\x48\x03\xe2\xca\x4d\xb5\xe9\x42\xc4\x79\xfc\x7b\xfc\xf3\xfc\x82\x73\x4a\x1a\xd0\x37\x4a\x38\x25\x61\x8c\x85\xea\x02\xe7\xfd\x8b\x24\x1e\x27\xfc\x24\x1e\x27\xe3\xc1\x59\xc2\x39\x69\xc0\x29\xe6\x0a\x46\xa2\x16\x8c\xe3\xe3\x61\xc2\x47\xb1\x5f\xe3\x56\x09\x93\x4e\x59\xa6\x49\x03\x4e\x94\x4d\x0d\xce\x1c\xea\xb2\x4b\xbe\x26\x76\x03\x9a\x1d\x42\x66\x22\xbd\x13\x99\xda\xf1\x26\x04\x8b\x99\x36\x0e\x22\x12\x84\x19\xba\x69\x75\xcb\x52\x5d\x74\x44\xe9\xda\x39\xde\xda\x76\xa6\x3b\x95\xc3\x3c\x7c\xbd\x9c\xe9\xf6\xa3\x36\x45\xe7\xb6\xc2\x5c\x2a\x13\x12\x4a\x88\x7b\x9a\x29\xf8\x25\x32\x65\xc0\x3a\x53\xa5\x0e\xe6\x24\xf0\xcf\xe0\x2f\x2c\xdd\xf7\x23\xb8\x99\x68\x53\x74\xc3\x99\xc8\x54\x78\x43\x82\xa1\xb0\x6e\x20\x77\x57\x73\x61\x1d\x47\xe9\x05\xbe\xfc\x12\x9f\xd5\xbf\xe5\xdc\xe2\xb3\x67\x2c\x56\xc6\xaf\xb6\xd5\x8f\xcf\x92\x21\xe7\x97\xcb\xbe\x6e\xa5\xd9\x27\xaa\x4d\x0c\x09\x06\xd2\xc2\xd5\xf5\xd2\xc8\x53\x27\x55\x99\xc2\x48\x3d\xd4\x90\x88\x42\xf3\x1d\x8b\x39\x09\x34\x74\x7b\xf0\xed\x6d\xcd\x7c\x41\x02\xcd\xd6\x1b\xea\xc1\xe1\xc1\x01\x09\x8c\x72\x95\x29\x41\xaf\x1d\x23\x37\x45\xfb\x9e\x17\x85\xa1\x16\x32\xc2\x72\xe6\x9b\xa2\xcc\x44\xa4\x6a\xbe\x68\x81\x7a\x4c\xf3\x4a\x2a\x0b\x8c\x31\xeb\x0c\x96\xd9\x87\x91\xfd\x60\x59\x6c\x2d\x66\xa5\xe7\xb5\xc0\x7b\x6f\x48\x8c\x31\xba\x4e\xe8\x97\x3e\x13\xf2\x14\x73\xa7\xcc\x40\xda\x08\x37\x7d\xfd\x30\x91\xe7\x32\x3f\x88\x1e\xa0\xb4\xff\x6d\xbe\x9e\x59\x64\xe0\xea\x7a\xaf\xb4\x05\xe6\x08\x0a\x31\xbb\x5a\x06\x7b\x4b\xa3\x8c\xf1\xb7\x36\xd4\xa7\xbb\xaf\x94\x79\xf2\x63\x1e\xa9\x87\x88\xb2\x38\x75\xf8\x47\x45\x94\x9d\x1b\xa9\xcc\xf1\x53\x14\xa2\x84\x93\xe4\xb2\x1f\x52\x36\xc4\x02\xdd\x32\xe9\x7a\xe4\x94\x90\x00\x27\xb0\xda\x22\xfc\x80\x03\xcf\xac\xa1\x2c\x2e\x65\xb4\xfa\x99\x58\x72\x3f\x0f\x51\x86\xdd\x17\xe9\x82\x92\x60\xb1\x5d\x6b\x3f\x51\x6c\x77\xaa\x57\xbf\xdc\xdb\x80\xa1\xdb\x06\xd4\xf2\x15\xa3\xd3\x24\x81\x07\xe5\xaa\xac\xb7\xe6\x4f\x33\xba\x66\xed\x83\xe1\x9d\x9a\x87\xa5\x28\x54\x58\x7f\x5d\xcb\x12\x8f\xf3\xbc\x66\x67\x93\x6b\x79\x50\xbc\x90\x5e\xbd\xec\xf5\x5e\xf8\x5b\xef\xe0\xb0\x46\xac\x3c\xf7\xb4\xbb\x05\x9b\xe7\xf6\x21\x6d\xee\xcc\xc2\x17\xaf\xbe\xae\x1a\x71\x8a\xa5\x8c\x28\x59\x90\xbf\x01\x00\x00\xff\xff\xaa\x67\xe1\xc5\x2f\x06\x00\x00")

func templatesGo_modelTablename_searchGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesGo_modelTablename_searchGo,
		"templates/go_model/tablename_search.go",
	)
}

func templatesGo_modelTablename_searchGo() (*asset, error) {
	bytes, err := templatesGo_modelTablename_searchGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go_model/tablename_search.go", size: 1583, mode: os.FileMode(420), modTime: time.Unix(1551158635, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/go_model/tablename.go": templatesGo_modelTablenameGo,
	"templates/go_model/tablename_query.go": templatesGo_modelTablename_queryGo,
	"templates/go_model/tablename_search.go": templatesGo_modelTablename_searchGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"go_model": &bintree{nil, map[string]*bintree{
			"tablename.go": &bintree{templatesGo_modelTablenameGo, map[string]*bintree{}},
			"tablename_query.go": &bintree{templatesGo_modelTablename_queryGo, map[string]*bintree{}},
			"tablename_search.go": &bintree{templatesGo_modelTablename_searchGo, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

